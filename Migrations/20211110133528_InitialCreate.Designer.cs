// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace myapp.Migrations
{
    [DbContext(typeof(SampleAPIContext))]
    [Migration("20211110133528_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("myapp.Models.ApplicationUser", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ApplicationUserId");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("myapp.Models.BasicInfo", b =>
                {
                    b.Property<int>("BasicInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PartnerAddress")
                        .HasColumnType("text");

                    b.Property<string>("PartnerBD")
                        .HasColumnType("text");

                    b.Property<string>("PartnerName")
                        .HasColumnType("text");

                    b.Property<string>("PartnerNum")
                        .HasColumnType("text");

                    b.Property<string>("PartnerRuby")
                        .HasColumnType("text");

                    b.Property<string>("StuffAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StuffName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StuffNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StuffRuby")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TaxOffice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BasicInfoId");

                    b.ToTable("BasicInfo");
                });

            modelBuilder.Entity("myapp.Models.IncomeAdjust", b =>
                {
                    b.Property<int>("IncomeAdjustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("integer");

                    b.Property<string>("DependentsAdr")
                        .HasColumnType("text");

                    b.Property<string>("DependentsDB")
                        .HasColumnType("text");

                    b.Property<string>("DependentsInc")
                        .HasColumnType("text");

                    b.Property<string>("DependentsName")
                        .HasColumnType("text");

                    b.Property<string>("DependentsNum")
                        .HasColumnType("text");

                    b.Property<string>("DependentsPrsEvid")
                        .HasColumnType("text");

                    b.Property<string>("DependentsRel")
                        .HasColumnType("text");

                    b.Property<string>("DependentsRuby")
                        .HasColumnType("text");

                    b.Property<string>("RadioGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IncomeAdjustId");

                    b.ToTable("IncomeAdjust");
                });

            modelBuilder.Entity("myapp.Models.IncomeCal", b =>
                {
                    b.Property<int>("IncomeCalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("integer");

                    b.Property<int>("BussinessExp1")
                        .HasColumnType("integer");

                    b.Property<int>("BussinessExp2")
                        .HasColumnType("integer");

                    b.Property<int>("BussinessInc1")
                        .HasColumnType("integer");

                    b.Property<int>("BussinessInc2")
                        .HasColumnType("integer");

                    b.Property<int>("DividendExp1")
                        .HasColumnType("integer");

                    b.Property<int>("DividendExp2")
                        .HasColumnType("integer");

                    b.Property<int>("DividendInc1")
                        .HasColumnType("integer");

                    b.Property<int>("DividendInc2")
                        .HasColumnType("integer");

                    b.Property<int>("ExceptExp1")
                        .HasColumnType("integer");

                    b.Property<int>("ExceptExp2")
                        .HasColumnType("integer");

                    b.Property<int>("ExceptInc1")
                        .HasColumnType("integer");

                    b.Property<int>("ExceptInc2")
                        .HasColumnType("integer");

                    b.Property<int>("Income1")
                        .HasColumnType("integer");

                    b.Property<int>("Income2")
                        .HasColumnType("integer");

                    b.Property<int>("MiscellaneousExp1")
                        .HasColumnType("integer");

                    b.Property<int>("MiscellaneousExp2")
                        .HasColumnType("integer");

                    b.Property<int>("MiscellaneousInc1")
                        .HasColumnType("integer");

                    b.Property<int>("MiscellaneousInc2")
                        .HasColumnType("integer");

                    b.Property<int>("PropertyExp1")
                        .HasColumnType("integer");

                    b.Property<int>("PropertyExp2")
                        .HasColumnType("integer");

                    b.Property<int>("PropertyInc1")
                        .HasColumnType("integer");

                    b.Property<int>("PropertyInc2")
                        .HasColumnType("integer");

                    b.Property<int>("RetirementExp1")
                        .HasColumnType("integer");

                    b.Property<int>("RetirementExp2")
                        .HasColumnType("integer");

                    b.Property<int>("RetirementInc1")
                        .HasColumnType("integer");

                    b.Property<int>("RetirementInc2")
                        .HasColumnType("integer");

                    b.HasKey("IncomeCalId");

                    b.ToTable("IncomeCal");
                });
#pragma warning restore 612, 618
        }
    }
}
